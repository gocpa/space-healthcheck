name: run-tests

on:
  push:
    paths:
      - '**.php'
      - '.github/workflows/run-tests.yml'
      - 'phpunit.xml.dist'
      - 'composer.json'
      - 'composer.lock'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    env:
      GOCPASPACE_HEALTHCHECK_SECRET: secret
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [8.4]
        # php: [8.4, 8.3, 8.1]
        laravel: [12]
        # laravel: [12.*, 11.*, 10.*]
        stability: [prefer-stable]
        include:
          - laravel: 12
            testbench: 10.*
          # - laravel: 11.*
          #   testbench: 9.*
          # - laravel: 10.*
          #   testbench: 8.*
        # exclude:
        #   - laravel: 12.*
        #     php: 8.1
        #   - laravel: 11.*
        #     php: 8.1

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      # - name: Setup problem matchers
      #   run: |
      #     echo "::add-matcher::${{ runner.tool_cache }}/php.json"
      #     echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      # - name: Install dependencies
      #   run: |
      #     composer require "laravel/framework:${{ matrix.laravel }}.*" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
      #     composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      # - name: List Installed Dependencies
      #   run: composer show -D

      # - name: Execute tests
      #   run: vendor/bin/pest --ci

      - name: Install laravel and run development server
        run: |
          composer create-project "laravel/laravel:^${{ matrix.laravel }}.0" laravel
          cd laravel
          composer require gocpa/space-healthcheck:dev-new-version
          php artisan serve --host=127.0.0.1 --port=8000 &
          for i in {1..10}; do
            curl --silent http://127.0.0.1:8000/up && exit 0
            sleep 1
          done
          echo "Server did not start in time" && exit 1

      - name: Check route response
        run: |
          RESPONSE=$(curl --write-out "%{http_code}" --silent --output /dev/null --header "accept: application/json" --header "x-space-secret-key: secret" http://127.0.0.1:8000/space/check)
          if [ "$RESPONSE" -ne 200 ]; then
            echo "Route is not accessible"
            exit 1
          fi
          echo "Route is accessible"


